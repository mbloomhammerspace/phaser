apiVersion: v1
kind: Pod
metadata:
  name: test-milvus-mcp-server
  namespace: default
spec:
  restartPolicy: Never
  containers:
  - name: mcp-tester
    image: python:3.11-slim
    command: ["sh", "-c"]
    args:
      - |
        echo "Installing required packages..."
        pip install requests
        echo "Testing Milvus MCP Server connectivity..."
        python3 -c "
import requests
import json
import time

MCP_SERVER_URL = 'http://milvus-mcp-server-service:8000'

def test_mcp_endpoint(path, method='GET', json_data=None):
    url = f'{MCP_SERVER_URL}{path}'
    print(f'\n--- Testing {method} {url} ---')
    try:
        if method == 'POST':
            response = requests.post(url, json=json_data, timeout=10)
        else:
            response = requests.get(url, timeout=10)
        print(f'Status Code: {response.status_code}')
        if response.headers.get('content-type', '').startswith('application/json'):
            print(f'Response: {json.dumps(response.json(), indent=2)}')
        else:
            print(f'Response: {response.text[:500]}')
        return response.status_code == 200
    except requests.exceptions.RequestException as e:
        print(f'Error: {e}')
        return False

# Test basic connectivity
print('Testing Milvus MCP Server...')
success = test_mcp_endpoint('/health')
if success:
    print('✅ Milvus MCP Server is responding')
else:
    print('❌ Milvus MCP Server is not responding')

# Test MCP protocol endpoints
print('\nTesting MCP protocol endpoints...')
test_mcp_endpoint('/mcp/initialize')
test_mcp_endpoint('/mcp/tools')
test_mcp_endpoint('/mcp/resources')

print('\nMilvus MCP Server test completed.')
        "
