apiVersion: v1
kind: Pod
metadata:
  name: get-full-schema
  namespace: default
spec:
  restartPolicy: Never
  containers:
  - name: test
    image: python:3.9-slim
    command: ["sh", "-c"]
    args:
      - |
        pip install requests
        python3 -c "
        import requests
        import json
        
        INGESTOR_URL = 'http://ingestor-server:8082'
        
        print('=== Getting Full Schema ===')
        
        try:
            openapi_response = requests.get(f'{INGESTOR_URL}/openapi.json', timeout=10)
            if openapi_response.status_code == 200:
                openapi_data = openapi_response.json()
                
                # Get documents endpoint schema
                if '/documents' in openapi_data.get('paths', {}):
                    docs_path = openapi_data['paths']['/documents']
                    if 'post' in docs_path:
                        post_schema = docs_path['post']
                        request_body = post_schema.get('requestBody', {})
                        if request_body:
                            content = request_body.get('content', {})
                            if 'application/json' in content:
                                schema = content['application/json'].get('schema', {})
                                print('POST /documents request schema:')
                                print(json.dumps(schema, indent=2))
                                
                                # Look for anyOf, oneOf, allOf patterns
                                if 'anyOf' in schema:
                                    print('\\nFound anyOf patterns:')
                                    for i, sub_schema in enumerate(schema['anyOf']):
                                        print(f'  Option {i+1}: {json.dumps(sub_schema, indent=2)}')
                                        
                                if 'oneOf' in schema:
                                    print('\\nFound oneOf patterns:')
                                    for i, sub_schema in enumerate(schema['oneOf']):
                                        print(f'  Option {i+1}: {json.dumps(sub_schema, indent=2)}')
                                        
                                if 'allOf' in schema:
                                    print('\\nFound allOf patterns:')
                                    for i, sub_schema in enumerate(schema['allOf']):
                                        print(f'  Option {i+1}: {json.dumps(sub_schema, indent=2)}')
            else:
                print(f'Failed: {openapi_response.status_code}')
                print(f'Error: {openapi_response.text}')
                
        except Exception as e:
            print(f'Error: {e}')
        
        print('\\n=== Schema Retrieval Complete ===')
        "
