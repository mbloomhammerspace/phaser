apiVersion: v1
kind: Pod
metadata:
  name: test-rag-endpoints
  namespace: default
spec:
  restartPolicy: Never
  containers:
  - name: test
    image: python:3.9-slim
    command: ["sh", "-c"]
    args:
      - |
        pip install requests
        
        echo "=== Testing RAG Server Endpoints ==="
        
        python3 -c \"
import requests
import json

RAG_URL = 'http://rag-server:8081'

print('Testing health endpoint...')
try:
    health_response = requests.get(f'{RAG_URL}/health', timeout=10)
    print('Health response:', health_response.status_code)
    if health_response.status_code == 200:
        print('Health data:', health_response.json())
    else:
        print('Health error:', health_response.text)
except Exception as e:
    print('Health exception:', e)

print()
print('Testing docs endpoint...')
try:
    docs_response = requests.get(f'{RAG_URL}/docs', timeout=10)
    print('Docs response:', docs_response.status_code)
    if 'text/html' in docs_response.headers.get('Content-Type', ''):
        print('OpenAPI documentation available')
    else:
        print('Docs content:', docs_response.text[:200])
except Exception as e:
    print('Docs exception:', e)

print()
print('Testing OpenAPI schema...')
try:
    openapi_response = requests.get(f'{RAG_URL}/openapi.json', timeout=10)
    print('OpenAPI response:', openapi_response.status_code)
    if openapi_response.status_code == 200:
        schema = openapi_response.json()
        paths = list(schema.get('paths', {}).keys())
        print('Available paths:', paths)
    else:
        print('OpenAPI error:', openapi_response.text)
except Exception as e:
    print('OpenAPI exception:', e)

print()
print('Testing root endpoint...')
try:
    root_response = requests.get(f'{RAG_URL}/', timeout=10)
    print('Root response:', root_response.status_code)
    print('Root content:', root_response.text[:200])
except Exception as e:
    print('Root exception:', e)
\"
